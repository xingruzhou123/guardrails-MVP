# # this file is for users to define their own custom settings# This file defines the safety rails for the application.
# # It's a "Colang alternative" that separates configuration from code.

# output_rails:
#   - name: "Block Sensitive AMD Info"
#     type: "regex"
#     description: "Blocks output containing both an AMD product and a sensitive micro-architectural term."
#     # The first list of patterns identifies the brand/product.
#     # The second list identifies the sensitive terms.
#     # The rule will trigger if a match is found from BOTH lists.
#     patterns:
#       - "(AMD|Ryzen|Zen\\s*\\d+)"
#       - "(branch\\s*predict(or|ion)|cache|micro[- ]?arch|pipeline|PBT|BTB|prediction\\s*table)"

#   - name: "Instella Moderation"
#     type: "llm_check"
#     description: "Uses Instella-3B for an in-process safety verdict."
#     model: "amd/Instella-3B-Instruct" # Specify the model to use for this rule
#     #maybe in future will change to a specific trained model to do safety things
#     on_fail: "allow"
#     device_map: "cpu"
output_rails:
  - name: "Block Sensitive AMD Info"
    type: "regex"
    model: "Qwen/Qwen3-4B-Thinking-2507"
    pattern: "(?i)(AMD|Ryzen|Zen\\s*\\d+).*(branch\\s*predict(or|ion)|cache|micro[- ]?arch|pipeline|PBT|BTB|prediction\\s*table)"

  - name: "Llama Semantic Guard"
    type: "llm_check"
    model: "meta-llama/Llama-Guard-3-1b"
    on_fail: "allow" #if want the unsure also view as unsafe then change this to faule
    #currently we set the unsure as safety


